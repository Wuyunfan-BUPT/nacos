name: E2E test for pull request

on:
  workflow_run:
    workflows: ["PR-CI"]
    types:
      - completed

env:
  DOCKER_REPO: wuyfeedocker/nacos-ci
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  TEST_REPO_NAME: nacos-group/nacos-e2e

jobs:
  docker:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    timeout-minutes: 30
    strategy:
      matrix:
        base-image: ["ubuntu"]
        java-version: ["8"]
    outputs:
      version-json: ${{ steps.show_versions.outputs.version-json }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifactNacos = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "nacos"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifactNacos.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/nacos.zip', Buffer.from(download.data));
      - run: |
          unzip nacos.zip
          mkdir nacos
          cp -r nacos-* nacos/
          ls
      - uses: actions/checkout@v3
        with:
          repository: nacos-group/nacos-e2e.git
          ref: main
          path: nacos-e2e
      - name: docker-login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and save docker images
        id: build-images
        run: |
          mv nacos-server-*-SNAPSHOT.tar.gz nacos-e2e/cicd/build
          cd nacos-e2e/cicd/build
          version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)
          mkdir versionlist
          touch versionlist/"${version}-`echo ${{ matrix.java-version }} | sed -e "s/:/-/g"`"
          ls versionlist/
          tag=${version}-$(echo ${{ matrix.java-version }} | sed -e "s/:/-/g")
          echo $tag
          docker build --no-cache -f Dockerfile -t ${DOCKER_REPO}:${tag} .
          docker push ${DOCKER_REPO}:${tag}
      - name: Show versions
        id: show_versions
        run: |
          a=(`ls nacos-e2e/cicd/build/versionlist`)
          printf '%s\n' "${a[@]}" | jq -R . | jq -s .
          echo version-json=`printf '%s\n' "${a[@]}" | jq -R . | jq -s .` >> $GITHUB_OUTPUT
  

  deploy:
    if: ${{ success() }}
    name: Deploy nacos
    needs: [docker]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      REPLICA_COUNT: 3
      DATABASE: mysql
      NODE_PORT: 30000
    strategy:
      matrix:
        mode: ["cluster","standalone"]
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - name: set nodeport
        run: |
          echo "::set-env name=NODE_PORT::$(expr $(expr $(expr $(expr 1 * $(expr ${{ github.run_number }} - 1)) + ${{ strategy.job-index }}) % 30000) + 30000)"
      - name: set cluster params
        if: ${{ matrix.mode == 'standalone' }}
        run: |
          echo "::set-env name=REPLICA_COUNT::1"
          echo "::set-env name=DATABASE::embedded"
      - uses: Wuyunfan-BUPT/test-tools@add_display_tools
        name: Deploy nacos
        with:
          yamlString: |
            action: deploy
            namespace: nacos-${{ github.run_id }}-${{ strategy.job-index }}
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            waitTimes: 1200
            velaAppDescription: nacos-${{ env.GITHUB_WORKFLOW }}-${{ github.run_id }}@${{ matrix.version }}
            repoName: nacos
            velauxUsername: ${{ secrets.VELA_USERNAME }}
            velauxPassword: ${{ secrets.VELA_PASSWORD }}
            helm:
              chart: ./cicd/helm
              git:
                branch: main
              repoType: git
              retries: 3
              url: https://ghproxy.com/https://github.com/nacos-group/nacos-e2e.git
              values:
                namespace: nacos-${{ github.run_id }}-${{ strategy.job-index }}
                global:
                  mode: ${{ matrix.mode }}
                nacos:
                  replicaCount: ${{ env.REPLICA_COUNT }}
                  image: 
                    repository: ${{ env.DOCKER_REPO }}
                    tag: ${{ matrix.version }}
                  storage:
                    type: ${{ env.DATABASE }}
                    db:
                      port: 3306
                      username: nacos
                      password: nacos
                      param: characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
                service:
                  nodePort: ${{ env.NODE_PORT }}
                  type: ClusterIP
  e2e-test:
    if: ${{ success() }}
    name: E2E Test
    needs: [docker, deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        mode: ["cluster","standalone"]
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@add_display_tools
        name: e2e test
        with:
          yamlString: |
            action: test
            namespace: nacos-${{ github.run_id }}-0
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            API_VERSION: v1
            KIND: Pod
            RESTART_POLICY: Never
            ENV:
              REPO_NAME: ${{ env.TEST_REPO_NAME }}
              CODE: https://ghproxy.com/https://github.com/${{ env.TEST_REPO_NAME }}
              BRANCH: main
              CODE_PATH: java/nacos-2X
              CMD: mvn clean test -B
              ALL_IP: null
            CONTAINER:
              IMAGE: cloudnativeofalibabacloud/test-runner:v0.0.4
              RESOURCE_LIMITS:
                cpu: 8
                memory: 8Gi
              RESOURCE_REQUIRE:
                cpu: 8
                memory: 8Gi

      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: test-e2e-grpc-java-log.txt
          path: testlog.txt
      - name: add markdown
        if: always()
        run: |
          cat result.md >> $GITHUB_STEP_SUMMARY

  clean:
    if: always()
    name: Clean
    needs: [docker, e2e-test]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        mode: ["cluster","standalone"]
        version: ${{ fromJSON(needs.docker.outputs.version-json) }}
    steps:
      - uses: Wuyunfan-BUPT/test-tools@add_display_tools
        name: clean
        with:
          yamlString: |
            action: clean
            namespace: nacos-${{ github.run_id }}-${{ strategy.job-index }}
            askConfig: ${{ secrets.ASK_CONFIG_VIRGINA }}
            velauxUsername: ${{ secrets.VELA_USERNAME }}
            velauxPassword: ${{ secrets.VELA_PASSWORD }}