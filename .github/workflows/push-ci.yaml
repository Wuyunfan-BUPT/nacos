name: PUSH-CI

on:
  push:
    branches: [master, develop, v1.x-develop, v1.X]

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: rocketmq-${{ github.ref }}

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
  DOCKER_REPO: apache/rocketmq-ci

jobs:
  dist-tar:
    name: Build dist tar
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "8"
          cache: "maven"
      - name: Build distribution tar
        run: |
          mvn -Prelease-nacos -DskipTests clean install -U -e -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
      - uses: actions/upload-artifact@v3
        name: Upload distribution tar
        with:
          name: nacos
          path: distribution/target/nacos-server-2.3.0-SNAPSHOT/nacos/*
      - name: print current path
        run: |
          ls
          echo `ls -l`

  docker:
    if: ${{ success() }}
    name: Docker images
    needs: [dist-tar]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        base-image: ["centos"]
        java-version: ["8"]
    steps:
      - uses: actions/download-artifact@v3
        name: Download distribution tar
        with:
          name: nacos
          path: ./
      - name: print path
        run: |
          echo `pwd`
          echo `ls /home/runner/work/nacos/nacos`
      - uses: actions/checkout@v3
        with:
          repository: Wuyunfan-BUPT/nacos-docker.git
          ref: master
          path: nacos-docker
      - name: docker-login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and save docker images
        id: build-images
        run: |
          cd nacos-docker/build
          version=${{ github.event.pull_request.number || github.ref_name }}-$(uuidgen)
          mkdir versionlist
          touch versionlist/"${version}-`echo ${{ matrix.base-image }} | sed -e "s/:/-/g"`"
          docker build --no-cache -f Dockerfile -t nacos:test8 .

      - name: Build and save docker image
